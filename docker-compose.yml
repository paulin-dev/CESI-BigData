
networks:
  hadoop:
    name: hadoop
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16


volumes:
  namenode_data:
  datanode1_data:
  datanode2_data:
  hive_warehouse:
  hive_db:
  nifi_conf:
  nifi_logs:
  nifi_state:
  nifi_flowfile:
  nifi_content:
  nifi_provenance:
  source-pgdata:


services:
  # ---------- Hadoop HDFS ----------
  namenode:
    image: apache/hadoop:3.3.5
    container_name: namenode
    hostname: namenode
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
    volumes:
      - namenode_data:/opt/hadoop/data/nameNode
      - ./hadoop-stack/hadoop_config:/opt/hadoop/etc/hadoop:ro
      - ./hadoop-stack/scripts/start-hdfs.sh:/start-hdfs.sh:ro
    command: ["/bin/bash", "/start-hdfs.sh"]
    ports:
      - "9870:9870"   # NameNode Web UI
      - "8020:8020"   # HDFS RPC
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9870/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped
    networks:
      hadoop:
        ipv4_address: 172.22.0.2

  datanode1:
    image: apache/hadoop:3.3.5
    container_name: datanode1
    hostname: datanode1
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
    volumes:
      - datanode1_data:/opt/hadoop/data/dataNode
      - ./hadoop-stack/hadoop_config:/opt/hadoop/etc/hadoop:ro
      - ./hadoop-stack/scripts/init-datanode.sh:/init-datanode.sh:ro
    command: ["/bin/bash", "/init-datanode.sh"]
    depends_on:
      - namenode
    ports:
      - "9864:9864"  # DataNode Web UI
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9864/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped
    networks:
      hadoop:
        ipv4_address: 172.22.0.3

  datanode2:
    image: apache/hadoop:3.3.5
    container_name: datanode2
    hostname: datanode2
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
    volumes:
      - datanode2_data:/opt/hadoop/data/dataNode
      - ./hadoop-stack/hadoop_config:/opt/hadoop/etc/hadoop:ro
      - ./hadoop-stack/scripts/init-datanode.sh:/init-datanode.sh:ro
    command: ["/bin/bash", "/init-datanode.sh"]
    depends_on:
      - namenode
    ports:
      - "9865:9864"  # DataNode Web UI (mapped to different host port)
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9865/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped
    networks:
      hadoop:
        ipv4_address: 172.22.0.4

  # ---------- YARN ResourceManager ----------
  resourcemanager:
    image: apache/hadoop:3.3.5
    container_name: resourcemanager
    hostname: resourcemanager
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
    volumes:
      - ./hadoop-stack/hadoop_config:/opt/hadoop/etc/hadoop:ro
      - ./hadoop-stack/scripts/start-yarn-rm.sh:/start-yarn-rm.sh:ro
    command: ["/bin/bash", "/start-yarn-rm.sh"]
    depends_on:
      - namenode
    ports:
      - "8088:8088"   # ResourceManager Web UI
      - "8030:8030"   # Scheduler
      - "8031:8031"   # Resource Tracker
      - "8032:8032"   # ApplicationMaster
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8088/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped
    networks:
      hadoop:
        ipv4_address: 172.22.0.5

  # ---------- YARN NodeManager ----------
  nodemanager:
    image: apache/hadoop:3.3.5
    container_name: nodemanager
    hostname: nodemanager
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
    volumes:
      - ./hadoop-stack/hadoop_config:/opt/hadoop/etc/hadoop:ro
      - ./hadoop-stack/scripts/start-yarn-nm.sh:/start-yarn-nm.sh:ro
    command: ["/bin/bash", "/start-yarn-nm.sh"]
    depends_on:
      - resourcemanager
    ports:
      - "8042:8042"   # NodeManager Web UI
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8042/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped
    networks:
      hadoop:
        ipv4_address: 172.22.0.6

  # ---------- Postgres for Hive Metastore ----------
  postgres:
    image: postgres:15
    container_name: hive-postgres
    environment:
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hivepw
      POSTGRES_DB: metastore_db
    volumes:
      - hive_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hive -d metastore_db"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      hadoop:
        ipv4_address: 172.22.0.10

  # ---------- Hive Metastore ----------
  metastore:
    image: apache/hive:4.0.1
    container_name: hive-metastore
    depends_on:
      - postgres
      - namenode
    environment:
      SERVICE_NAME: metastore
      DB_DRIVER: postgres
      SERVICE_OPTS: >-
        -Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver
        -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore_db
        -Djavax.jdo.option.ConnectionUserName=hive
        -Djavax.jdo.option.ConnectionPassword=hivepw
    volumes:
      - hive_warehouse:/opt/hive/data/warehouse
      - ./hadoop-stack/hive/postgresql-42.7.5.jar:/opt/hive/lib/postgres.jar:ro
      - ./hadoop-stack/hadoop_config/core-site.xml:/opt/hive/conf/core-site.xml:ro
      - ./hadoop-stack/hadoop_config/hdfs-site.xml:/opt/hive/conf/hdfs-site.xml:ro
      - ./hadoop-stack/hadoop_config/yarn-site.xml:/opt/hive/conf/yarn-site.xml:ro
    ports:
      - "9083:9083" # Metastore Thrift
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9083"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: unless-stopped
    networks:
      hadoop:
        ipv4_address: 172.22.0.11

  # ---------- HiveServer2 ----------
  hiveserver2:
    image: apache/hive:4.0.1
    container_name: hive-hs2
    depends_on:
      - metastore
    environment:
      SERVICE_NAME: hiveserver2
      IS_RESUME: "true"
      SERVICE_OPTS: >-
        -Dhive.metastore.uris=thrift://metastore:9083
        -Dhive.server2.thrift.port=10000
        -Dhive.server2.webui.port=10002
    volumes:
      - hive_warehouse:/opt/hive/data/warehouse
      - ./hadoop-stack/hive/postgresql-42.7.5.jar:/opt/hive/lib/postgres.jar:ro
      - ./hadoop-stack/hadoop_config/core-site.xml:/opt/hive/conf/core-site.xml:ro
      - ./hadoop-stack/hadoop_config/hdfs-site.xml:/opt/hive/conf/hdfs-site.xml:ro
      - ./hadoop-stack/hadoop_config/yarn-site.xml:/opt/hive/conf/yarn-site.xml:ro
    ports:
      - "10000:10000" # JDBC
      - "10002:10002" # Web UI for HS2
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 10000"]
      interval: 10s
      timeout: 5s
      retries: 30
    restart: unless-stopped
    networks:
      hadoop:
        ipv4_address: 172.22.0.12

  # ---------- Hue (Alternative UI - May have issues on ARM64/Apple Silicon) ----------
  hue:
    image: gethue/hue:4.11.0
    platform: linux/amd64
    container_name: hue
    depends_on:
      - hiveserver2
      - namenode
      - resourcemanager
    ports:
      - "8888:8888"
    volumes:
      - ./hadoop-stack/hue/hue.ini:/usr/share/hue/desktop/conf/hue.ini:ro
    environment:
      - HUE_DATABASE_ENGINE=sqlite3
      - POLARS_SKIP_CPU_CHECK=1
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8888 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 15
    restart: unless-stopped
    networks:
      hadoop:
        ipv4_address: 172.22.0.21

  # ---------- Apache NiFi ----------
  nifi:
    image: apache/nifi:1.28.1
    container_name: nifi
    user: root
    depends_on:
      - namenode
    environment:
      SINGLE_USER_CREDENTIALS_USERNAME: admin
      SINGLE_USER_CREDENTIALS_PASSWORD: cesinifi2025
      NIFI_WEB_HTTP_PORT: 8443
      NIFI_JVM_HEAP_INIT: 512m
      NIFI_JVM_HEAP_MAX: 1g
    ports:
      - "8443:8443"
    healthcheck:
      test: ["CMD-SHELL", "curl -k https://localhost:8443/nifi || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 15
      start_period: 120s
    volumes:
      - ./hadoop-stack/nifi/jars:/opt/nifi/nifi-current/lib/ext
      - ./hadoop-stack/nifi/conf/hive-site.xml:/opt/nifi/nifi-current/conf/hive-site.xml:ro
      - ./hadoop-stack/nifi/libs/nifi-hive-nar-1.28.1.nar:/opt/nifi/nifi-current/lib/nifi-hive-nar-1.28.1.nar:ro
      - ./hadoop-stack/nifi/libs/nifi-hive-services-api-nar-1.28.1.nar:/opt/nifi/nifi-current/lib/nifi-hive-services-api-nar-1.28.1.nar:ro
      - nifi_conf:/opt/nifi/nifi-current/conf
      - nifi_logs:/opt/nifi/nifi-current/logs
      - nifi_state:/opt/nifi/nifi-current/state
      - nifi_flowfile:/opt/nifi/nifi-current/flowfile_repository
      - nifi_content:/opt/nifi/nifi-current/content_repository
      - nifi_provenance:/opt/nifi/nifi-current/provenance_repository
      - ./data:/opt/nifi/data
    restart: unless-stopped
    networks:
      hadoop:
        ipv4_address: 172.22.0.22

  # ---------- Source Postgres Database ----------
  postgres-source:
    image: postgres:15
    container_name: postgres-source
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2025
      POSTGRES_DB: postgres
    # psql -U postgres -d postgres
    # \dt
    volumes:
      - ./data/postgres/DATA2023.dump:/tmp/DATA2023.dump:ro
      - ./hadoop-stack/scripts/restore-postgres.sh:/docker-entrypoint-initdb.d/restore.sh:ro
      - source-pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      hadoop:
        ipv4_address: 172.22.0.30